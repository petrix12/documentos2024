"use strict";(self.webpackChunkdocumentacion=self.webpackChunkdocumentacion||[]).push([[8415],{6619:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var l=r(4848),s=r(8453);const a={},o="LARAVEL 10",i={id:"laravel/laravel10/laravel10",title:"LARAVEL 10",description:"Pre-requisitos obligatorios:",source:"@site/docs/laravel/laravel10/laravel10.md",sourceDirName:"laravel/laravel10",slug:"/laravel/laravel10/",permalink:"/documentos2024/docs/laravel/laravel10/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/laravel/laravel10/laravel10.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Translate your site",permalink:"/documentos2024/docs/tutorial-extras/translate-your-site"},next:{title:"Visual Studio Code",permalink:"/documentos2024/docs/vsc/"}},d={},c=[{value:"Pre-requisitos obligatorios:",id:"pre-requisitos-obligatorios",level:2},{value:"Pre-requisitos recomendados:",id:"pre-requisitos-recomendados",level:2},{value:"Extensiones de VSC recomendadas:",id:"extensiones-de-vsc-recomendadas",level:2},{value:"Extensiones de Google recomendadas:",id:"extensiones-de-google-recomendadas",level:2},{value:"Documentaci\xf3n:",id:"documentaci\xf3n",level:2},{value:"Instalaci\xf3n Laravel",id:"instalaci\xf3n-laravel",level:2},{value:"Estructura de carpetas de un proyecto Laravel:",id:"estructura-de-carpetas-de-un-proyecto-laravel",level:2},{value:"Rutas",id:"rutas",level:2},{value:"Controladores",id:"controladores",level:2},{value:"Eloquent:",id:"eloquent",level:2},{value:"Vistas",id:"vistas",level:2},{value:"Blade",id:"blade",level:2},{value:"Migraciones",id:"migraciones",level:2},{value:"Modelos:",id:"modelos",level:2},{value:"Tinker",id:"tinker",level:2},{value:"Eloquent:",id:"eloquent-1",level:2},{value:"Seeder",id:"seeder",level:2},{value:"Factory",id:"factory",level:2},{value:"Mutadores y accesores:",id:"mutadores-y-accesores",level:2},{value:"Form Request:",id:"form-request",level:2},{value:"Policy:",id:"policy",level:2},{value:"Configuraci\xf3n",id:"configuraci\xf3n",level:2},{value:"Mailables",id:"mailables",level:2},{value:"Componentes",id:"componentes",level:2},{value:"Middlewares:",id:"middlewares",level:2},{value:"Storage:",id:"storage",level:2},{value:"Provider:",id:"provider",level:2},{value:"Observer:",id:"observer",level:2},{value:"Pasar par\xe1metros a determinadas vistas:",id:"pasar-par\xe1metros-a-determinadas-vistas",level:2},{value:"Crear una vista markdown:",id:"crear-una-vista-markdown",level:2},{value:"Livewire:",id:"livewire",level:2},{value:"Publicar recursos de Laravel:",id:"publicar-recursos-de-laravel",level:2},{value:"Tailwind",id:"tailwind",level:2},{value:"Algunos comandos artisan:",id:"algunos-comandos-artisan",level:2},{value:"Cach\xe9 de Laravel:",id:"cach\xe9-de-laravel",level:2},{value:"Algunas funciones php:",id:"algunas-funciones-php",level:2},{value:"Crear un virtual host:",id:"crear-un-virtual-host",level:2},{value:"Laravel Collective",id:"laravel-collective",level:2},{value:"Laravel-permission:",id:"laravel-permission",level:2},{value:"Tips generales:",id:"tips-generales",level:2}];function t(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"laravel-10",children:"LARAVEL 10"}),"\n",(0,l.jsx)(n.h2,{id:"pre-requisitos-obligatorios",children:"Pre-requisitos obligatorios:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://www.apachefriends.org/es/index.html",children:"XAMPP"})," o ",(0,l.jsx)(n.a,{href:"https://laragon.org/index.html",children:"Laragon"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://getcomposer.org",children:"Composer"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://nodejs.org",children:"NodeJS"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"pre-requisitos-recomendados",children:"Pre-requisitos recomendados:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://git-scm.com",children:"GIT"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://code.visualstudio.com",children:"Visual Studio Code"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"extensiones-de-vsc-recomendadas",children:"Extensiones de VSC recomendadas:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Laravel Blade formatter (Shuhei Hayashibara)."}),"\n",(0,l.jsx)(n.li,{children:"Laravel Blade Snippets (Winnie Lin)."}),"\n",(0,l.jsx)(n.li,{children:"Laravel goto view (codingyu)."}),"\n",(0,l.jsx)(n.li,{children:"Laravel Snippets (Winnie Lin)."}),"\n",(0,l.jsx)(n.li,{children:"PHP Intelephense (Ben Mewburn)."}),"\n",(0,l.jsx)(n.li,{children:"Spanish Language Pack for Visual Studio Code (Microsoft)."}),"\n",(0,l.jsx)(n.li,{children:"Tailwind CSS IntelliSense (Tailwind Labs)."}),"\n",(0,l.jsx)(n.li,{children:"Alpine.js IntelliSense (Adrian Wilczy\u0144ski)."}),"\n",(0,l.jsx)(n.li,{children:"GitHub Copilot (GitHub)."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"extensiones-de-google-recomendadas",children:"Extensiones de Google recomendadas:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"JSON Formatter"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"documentaci\xf3n",children:"Documentaci\xf3n:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://laravel.com",children:"P\xe1gina oficial de Laravel"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"https://laravel-lang.com/installation.html",children:"Laravel Lang"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"instalaci\xf3n-laravel",children:"Instalaci\xf3n Laravel"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Instalar el instalador de Laravel:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ composer global require laravel/installer"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Instalaci\xf3n de un proyecto Laravel:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["V\xeda composer (no requiere del instalador de Laravel):","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ composer create-project laravel/laravel mi_proyecto_laravel"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["V\xeda instalador de Laravel:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ laravel new mi_proyecto_laravel"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un proyecto con Jetstream desde el instalador de Laravel:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ laravel new mi_proyecto_laravel --jet"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"estructura-de-carpetas-de-un-proyecto-laravel",children:"Estructura de carpetas de un proyecto Laravel:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"app"}),": l\xf3gica principal de la aplicaci\xf3n (backend)."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"bootstrap"}),": archivos que se usan para la carga del proyecto."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"config"}),": archivos de configuraci\xf3n del proyecto.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"config\\app.php"}),": configuraci\xf3n de la aplicaci\xf3n."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"config\\database.php"}),": configuraci\xf3n de la base de datos."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"config\\mail.php"}),": configuraci\xf3n de emails."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"database"}),": administraci\xf3n de la base de datos.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"database\\factories"}),": creaci\xf3n de datos de prueba."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"database\\migrations"}),": administraci\xf3n de tablas en base de datos."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"database\\seeders"}),": poblar la base de datos con datos de prueba."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"lang"}),": administraci\xf3n de idiomas."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"node_modules"}),": dependencias npm."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"public"}),": archivos accesibles desde la web.","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"public\\index.php"}),": punto de entrada a la aplicaci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"resources"}),": vista de la aplicaci\xf3n (frontend)","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"resources\\css"}),": estilos."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"resources\\js"}),": scripts."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"resources\\views"}),": vistas y componentes."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"routes"}),": url's o rutas de la aplicaci\xf3n."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"storage"}),": almacenamiento."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"tests"}),": archivos de pruebas para la aplicaci\xf3n."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"vendor"}),": dependencias composer."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"rutas",children:"Rutas"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Estructura de una ruta:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Las rutas se definenen en los archivos contenidos en la carpeta ",(0,l.jsx)(n.strong,{children:"routes"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// Ruta con par\xe1metros\r\nRoute::get('ruta/{parametro_obligatorio}/{parametro_opcional?}', function($parametro_obligatorio, $parametro_opcional = null) {\r\n    if($parametro_opcional) {\r\n        return \"ruta con $parametro_obligatorio y $parametro_opcional\";\r\n    } else {\r\n        return \"ruta con solo con $parametro_obligatorio\",\r\n    }\r\n});\r\n\r\n// Buscar\xe1 el m\xe9todo __invoke en el controlador\r\nRoute::get('ruta', NombreController::class);\r\n\r\n// Buscar\xe1 el m\xe9todo nombre_metodo en el controlador\r\nRoute::get('ruta', [NombreController::class, 'nombre_metodo']);\r\n\r\n// Definir un grupo de rutas\r\nRoute::controller(NombreController::class)->group(function() {\r\n    Route::get('ruta1', 'metodo1');\r\n    Route::get('ruta2', 'metodo2');\r\n    Route::get('ruta3', 'metodo3');\r\n});\r\n\r\n// Rutas necesarias para hacer un CRUD\r\n// 1. Mostrar la lista de registros\r\nRoute::get('registros', [RegistroController::class, 'index'])->name('registos.index');\r\n// 2. Crear un registro\r\nRoute::get('registros/create', [RegistroController::class, 'create'])->name('registos.create');\r\n// 3. Guardar un registro\r\nRoute::post('registros', [RegistroController::class, 'store'])->name('registos.store');\r\n// 4. Mostrar un registro\r\nRoute::get('registros/{registro}', [RegistroController::class, 'show'])->name('registos.show');\r\n// 5. Editar un registro\r\nRoute::get('registros/{registro}/edit', [RegistroController::class, 'edit'])->name('registos.edit');\r\n// 6. Actualizar un registro\r\nRoute::put('registros/{registro}', [RegistroController::class, 'update'])->name('registos.update');\r\n// 7. Eliminar un registro\r\nRoute::delete('registros/{registro}', [RegistroController::class, 'destroy'])->name('registos.destroy');\r\n\r\n// Ruta tipo resource (necesarias para hacer un CRUD, es equivalente a al conjuto de reutas definidas anteriormente)\r\nRoute::resource('registros', RegistroController::class)->names('registross');\r\n\r\n// Ruta tipo resource indicando los m\xe9todos del controlador a usar\r\n// Luego en el controlador NombreController se pueden incluir sololos m\xe9todos que se esten usando\r\nRoute::resource('ruta', NombreController::class)->only(['index', 'edit', 'update'])->names('rutas');\r\n\r\n// Ruta tipo resource indicando los m\xe9todos del controlador a exceptuar\r\n// Luego en el controlador NombreController se pueden eliminar todos los m\xe9todos que no se esten usando\r\nRoute::resource('ruta', NombreController::class)->except(['show', 'destroy'])->names('rutas');\r\n\r\n// Ruta tipo resource para API (necesarias para hacer un CRUD, como es para API no se generan las rutas create y edit)\r\nRoute::apiResource('registros', RegistroController::class)->names('registross');\r\n\r\n// Para cambiar el nombre de los par\xe1metros que se reciben en los m\xe9todos\r\nRoute::apiResource('registros', RegistroController::class)->parameters(['registros' => 'rutas']);\r\n\r\n// Para cambiar los nombres de create y edit:\r\n// Modificar el provider: app\\Providers\\RouteServiceProvider.php\r\n/*\r\n    // ...\r\n    public function boot(): void\r\n    {\r\n        // ...\r\n        Route::resourceVerbs([\r\n            'create' => 'crear',\r\n            'edit' => 'editar'\r\n        ]);\r\n        // ...\r\n    }\r\n    // ...       \r\n*/\r\n\r\n// Agrupar rutas que compartan un mismo controlador\r\nRoute::prefix('registros')->name('registos.')->controller(RegistroController::class)->group(function() {\r\n    // 1. Mostrar la lista de registros\r\n    Route::get('', 'index')->name('index');\r\n    // 2. Crear un registro\r\n    Route::get('/create', 'create')->name('create');\r\n    // 3. Guardar un registro\r\n    Route::post('', 'store')->name('store');\r\n    // 4. Mostrar un registro\r\n    Route::get('/{registro}', 'show')->name('show');\r\n    // 5. Editar un registro\r\n    Route::get('/{registro}/edit', 'edit')->name('edit');\r\n    // 6. Actualizar un registro\r\n    Route::put('/{registro}', 'update')->name('update');\r\n    // 7. Eliminar un registro\r\n    Route::delete('/{registro}', 'destroy')->name('destroy');            \r\n});\r\n\r\n// Ruta para controlador de un solo m\xe9todo: __invoke\r\nRoute::get('ruta', OnlymetodController::class);\r\n/*\r\n    El controlador OnlymetodController solo contendr\xe1 un m\xe9todo:\r\n    // __invoke: m\xe9todo invocable\r\n    public function __invoke() {\r\n        // L\xf3gica del m\xe9todo\r\n    }\r\n\r\n*/\r\n\r\n// Definir m\xe1s de un m\xe9todo en una ruta\r\nRoute::match(['get', 'post'], 'mi_ruta', function() {\r\n    return \"Ruta mi_ruta usando el m\xe9todo GET o POST\";\r\n});\r\n\r\n// Proteger rutas con expresiones regulares\r\n// Car\xe1cteres de letras       \r\nRoute::get('ruta/{letras}', function() {\r\n    return \"Ruta con par\xe1metros con valores de letras\"\r\n})->where('letras', '[a-zA-Z]+');   //->whereAlpha('letras');\r\n\r\n// Car\xe1cteres alfanum\xe9ricos\r\nRoute::get('ruta/{letras}', function() {\r\n    return \"Ruta con par\xe1metros con valores alfanum\xe9ricos\"\r\n})->whereAlphaNumeric('letras');\r\n\r\n// Car\xe1cteres num\xe9ricos, pero indicando la protecci\xf3n de manera global en el provider app\\Providers\\RouteServiceProvider.php\r\nRoute::get('ruta/{numero}', function() {\r\n    return \"Ruta con par\xe1metros con valores de n\xfameros\"\r\n});\r\n/*\r\n    + Modificar el provider app\\Providers\\RouteServiceProvider.php:\r\n```php\r\n// ...\r\nclass RouteServiceProvider extends ServiceProvider\r\n{\r\n    // ...\r\n    public function boot(): void\r\n    {\r\n        Route::pattern('numero', '[0-9]+');\r\n        // ...\r\n    }\r\n}\r\n*/\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Asignar nombre identificativo a una ruta:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"Route::get('ruta', [NombreController::class, 'nombre_metodo'])->name('mi_ruta.ruta');\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 1:"})," ejemplo para invocar ruta desde una vista:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- ... --\x3e\r\n<a href=\"{{ route('mi_ruta.ruta') }}\">Mi ruta</a>\r\n\x3c!-- ... --\x3e\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 2:"})," ejemplo para invocar ruta con par\xe1metro desde una vista:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- ... --\x3e\r\n<a href=\"{{ route('mi_ruta.ruta', 'parametro') }}\">Mi ruta</a>\r\n\x3c!-- ... --\x3e\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 3:"})," ejemplo para invocar ruta con varios par\xe1metro desde una vista:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- ... --\x3e\r\n<a href=\"{{ route('mi_ruta.ruta', [\r\n        'parametro1' => $valor1,\r\n        'parametro2' => $valor2\r\n    ]) }}\"\r\n>Mi ruta</a>\r\n\x3c!-- ... --\x3e\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de modelo de rutas para un CRUD:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"Route::get('modelos', [ModeloController::class, 'index'])->name('modelos.index');\r\nRoute::get('modelos/create', [ModeloController::class, 'create'])->name('modelos.create');\r\nRoute::post('modelos', [ModeloController::class, 'store'])->name('modelos.store');\r\nRoute::get('modelos/{modelo}', [ModeloController::class, 'show'])->name('modelos.show');\r\nRoute::get('modelos/{modelo}/edit', [ModeloController::class, 'edit'])->name('modelos.edit');\r\nRoute::put('modelos/{modelo}', [ModeloController::class, 'update'])->name('modelos.update');\r\nRoute::delete('modelos/{modelo}', [ModeloController::class, 'destroy'])->name('modelos.destroy');\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de modelo de rutas para un CRUD con resource:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"Route::resource('modelos', ModeloController::class);\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de ruta cuando queremos mostrar contenido est\xe1tico:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"Route::view('mirutaestatica', 'vista');\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ver todas las rutas:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan r",":l"]}),"\n",(0,l.jsxs)(n.li,{children:["$ php artisan route",":list"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ver todas las rutas con un nombre espec\xedfico:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan r",":l"," --name=rutas"]}),"\n",(0,l.jsxs)(n.li,{children:["$ php artisan r",":l"," --path=comienza_por"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ver todas las rutas definidas por el programador de la aplicaci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan r",":l"," --except-vendor"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ver todas las rutas definidas por laravel o paquetes de terceros:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan r",":l"," --only-vendor"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ver todas las rutas con junto con el middelware que la protege:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan r",":l"," -v"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Almacenar rutas en cache:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan route",":cache"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": este comando se recomienda usar en producci\xf3n y no durante el desarrollo."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Limpiar rutas en cache:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan route",":clear"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"controladores",children:"Controladores"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear controlador:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":controller"," Carpeta/NombreController"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de un controlador para un CRUD","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["app\\Http\\Controllers\\ModeloController.php","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Models\\Modelo;\r\n// ...\r\nclass ModeloController extends Controller\r\n{\r\n    public function index() {\r\n        $modelos = Modelo::paginate();\r\n        return view('crud.modelos.index', compact('modelos'));\r\n    }\r\n\r\n    public function create() {\r\n        return view('crud.modelos.create');\r\n    }\r\n\r\n    public function store(Request $request) {\r\n        $request->validate([\r\n            'propiedad1' => 'required|min:12'\r\n            // Forma alternativa:\r\n            // 'propiedad1' => ['required', 'min:12']\r\n        ]);\r\n        // Forma 1:\r\n        /*\r\n        $modelo = new Modelo();\r\n        $modelo->propiedad1 = $request->propiedad1;\r\n        $modelo->save();\r\n        */\r\n\r\n        // Forma 2:\r\n        /*\r\n        $modelo = Modelo::create([\r\n            'propiedad1' => $request->propiedad1\r\n        ]);\r\n        */\r\n\r\n        // Forma 3:\r\n        $modelo = Modelo::create($request->all());\r\n\r\n        return redirect()->route('modelos.show', $modelo);\r\n    }\r\n\r\n    public function show(Modelo $modelo) {\r\n        return view('crud.modelos.show', compact('modelo'));\r\n    }\r\n\r\n    public function edit(Modelo $modelo) {\r\n        return view('crud.modelos.edit', compact('modelo'));\r\n    }\r\n\r\n    public function update(Request $request, Modelo $modelo) {\r\n        $request->validate([\r\n            // Reglas de validaci\xf3n\r\n            'propiedad1' => 'required|min:12'\r\n        ], [\r\n            // Personalizaci\xf3n de los mensajes de error\r\n            'propiedad1.required' => 'La propiedad 1 es obligatoria'\r\n        ], [\r\n            // Personalizaci\xf3n de los atributos\r\n            'propiedad1' => 'Cambio de nombre'\r\n        ]);\r\n\r\n        // Forma 1:\r\n        /*\r\n        $modelo->propiedad1 = $request->propiedad1;\r\n        $modelo->save();\r\n        */\r\n\r\n        // Forma 2:\r\n        $modelo->update(['propiedad1' => $request->propiedad1]);\r\n\r\n        // Forma 3:\r\n        $modelo->update($request->all());\r\n\r\n        return redirect()->route('modelos.show', $modelo);\r\n    }\r\n\r\n    public function destroy(Modelo $modelo) {\r\n        $modelo->delete();\r\n        return redirect()->route('modelos.index');\r\n    }\r\n}        \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Emitir una variable de sesi\xf3n (forma 1):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function destroy(Modelo $modelo) {\r\n    $modelo->delete();\r\n    session()->flash('info', 'El modelo ha sido eliminado');\r\n    return redirect()->route('modelos.index');\r\n}\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Emitir una variable de sesi\xf3n (forma 2):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function destroy(Modelo $modelo) {\r\n    $modelo->delete();\r\n    return redirect()->route('modelos.index')->with('info', 'El modelo ha sido eliminado');\r\n}\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un controlador tipo resource:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":controller"," NameController -r"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": este comando genera un controlador con los m\xe9todos necesarios para un CRUD:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"index, create, store, show, edit, update y destroy."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Llamar una vista:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function mi_metodo1() {\r\n    return view('mi_vista1');\r\n}\r\n// ...\r\n// Enviar variables a la vista\r\n// Forma 1:\r\npublic function mi_metodo1($mi_variable) {\r\n    return view('mi_vista1', ['mi_variable' => $mi_variable]);\r\n}    \r\n// Forma 2:\r\npublic function mi_metodo1($mi_variable) {\r\n    return view('mi_vista1', compact('mi_variable'));\r\n}\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": se recomienda nombrar las vista igual que el m\xe9todo."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"eloquent",children:"Eloquent:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Obtener los n \xfaltimos registros","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// $n: n\xfamero de registros a recuperar\r\n$registros = Registro::latest('id')->take($n)->get();\n"})}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"xxx"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"vistas",children:"Vistas"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejemplos de vistas para un CRUD:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["resources/views/crud/modelos/index.blade.php","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@extends('layouts.mi_plantilla')\r\n\r\n@section('title', 'Lista modelos')\r\n\r\n@section('content')\r\n    <h1>Lista modelos</h1>\r\n    <ul>\r\n        @foreach($modelos as $modelo)\r\n            <li>Propiedad 1: {{ $modelo->propiedad1 }}</li>\r\n        @endforeach\r\n    </ul>\r\n    \x3c!-- Si el controlador env\xeda los registros paginados --\x3e\r\n    {{ $modelos->link() }}\r\n@endsection\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["resources\\views\\crud\\modelos\\create.blade.php","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@extends('layouts.mi_plantilla')\r\n\r\n@section('title', 'Crear modelo')\r\n\r\n@section('content')\r\n    <h1>Crear modelo</h1>\r\n    <form action=\"{{ route('modelos.store') }}\" method=\"POST\">\r\n        @csrf\r\n        <label>Propiedad 1</label>\r\n        <input type=\"text\" name=\"propiedad1\" value=\"{{ old('propiedad1') }}\" />\r\n        @error('propiedad1')\r\n            {{ $message }}\r\n        @enderror\r\n        <button type=\"submit\">Crear</button>\r\n    </form>\r\n@endsection\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["resources\\views\\crud\\modelos\\show.blade.php","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@extends('layouts.mi_plantilla')\r\n\r\n@section('title', 'Mostrar modelo')\r\n\r\n@section('content')\r\n    <h1>Mostrar modelo</h1>\r\n    <label>Propiedad 1: {{ $modelo->propiedad1 }}</label>\r\n    <a href=\"{{ route('modelos.index') }}\">Lista de modelos</a>\r\n    <a href=\"{{ route('modelos.edit', $modelo) }}\">Editar modelo</a>\r\n    <form action=\"{{ route('modelos.destroy', $modelo) }}\" method=\"POST\">\r\n        @csrf\r\n        @method('delete')\r\n        <button type=\"submit\">Eliminar modelo</button>\r\n    </form>\r\n@endsection        \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["resources\\views\\crud\\modelos\\edit.blade.php","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@extends('layouts.mi_plantilla')\r\n\r\n@section('title', 'Editar modelo')\r\n\r\n@section('content')\r\n    <h1>Editar modelo</h1>\r\n    <form action=\"{{ route('modelos.update', $modelo) }}\" method=\"POST\">\r\n        @csrf\r\n        @method('put')\r\n        <label>Propiedad 1</label>\r\n        <input type=\"text\" name=\"propiedad1\" value=\"{{ old('propiedad1', $modelo->propiedad1) }}\" />\r\n        @error('propiedad1')\r\n            {{ $message }}\r\n        @enderror\r\n        <button type=\"submit\">Actualizar</button>\r\n    </form>\r\n@endsection\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Resivir una variable de sesi\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["resources/views/crud/modelos/index.blade.php","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@extends('layouts.mi_plantilla')\r\n\r\n@section('title', 'Lista modelos')\r\n\r\n@section('content')\r\n    <h1>Lista modelos</h1>\r\n    @if(session('info'))\r\n        <script>\r\n            alert(\"{{ session('info') }}\");\r\n        <\/script>\r\n    @endif\r\n    <ul>\r\n        @foreach($modelos as $modelo)\r\n            <li>Propiedad 1: {{ $modelo->propiedad1 }}</li>\r\n        @endforeach\r\n    </ul>\r\n    \x3c!-- Si el controlador env\xeda los registros paginados --\x3e\r\n    {{ $modelos->link() }}\r\n@endsection\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Mostrar variables en vista:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"\x3c!-- ... --\x3e\r\n\x3c!-- Con bloqueo de texto enriquecido --\x3e\r\n{{ $variable }}\r\n\x3c!-- Con escape de texto enriquecido --\x3e\r\n{!! $variable !!}\r\n\x3c!-- Si estamos trabajando con otro framework que utiliza la misma sintaxis --\x3e\r\n@{{ $variable_de_vue }}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Interactuar arreglos de php con javascript:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Controlador:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function index() {\r\n    $arreglo = [\r\n        [\r\n            'id' => 1,\r\n            'infor' => 'Informaci\xf3n 1'\r\n        ],\r\n        [\r\n            'id' => 2,\r\n            'infor' => 'Informaci\xf3n 2'\r\n        ],\r\n    ];\r\n\r\n    return view('vista', compact('arreglo'))\r\n}\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Vista (sin directiva blade):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"\x3c!-- ... --\x3e\r\n<script>\r\n    let arreglo = {!! json_encode($arreglo) !!}\r\n<\/script>\r\n\x3c!-- ... --\x3e\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Vista (con directiva blade):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"\x3c!-- ... --\x3e\r\n<script>\r\n    let arreglo = @json($arreglo)\r\n<\/script>\r\n\x3c!-- ... --\x3e\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"blade",children:"Blade"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Construcci\xf3n de plantillas Blade","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear plantilla en ",(0,l.jsx)(n.strong,{children:"resources\\views\\layouts\\mi_plantilla.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    \x3c!-- ... --\x3e\r\n    <title>@yield('title')</title>\r\n</head>\r\n<body>\r\n    @yield('content')\r\n</body>\r\n</html>\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Uso de la plantilla en una vista ",(0,l.jsx)(n.strong,{children:"resources\\views\\mi_vista.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@extends('layouts.mi_plantilla')\r\n\r\n@section('title', 'Mi t\xedtulo de p\xe1gina')\r\n\r\n@section('content')\r\n    {{-- Mi contenido HTML --}}\r\n@endsection\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Invocar vista desde un controllador:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass NombreController extends Controller\r\n{\r\n    // ...\r\n    public function mi_vista() {\r\n        $parametro = 'Mi par\xe1metro';\r\n        return view('mi_vista', compact('parametro'));\r\n    }\r\n    // ...\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de directiva ",(0,l.jsx)(n.strong,{children:"foreach"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- ... --\x3e\r\n<ul>\r\n    @foreach($modelos as $modelo)\r\n        <li>Propiedad 1: {{ $modelo->propiedad1 }}</li>\r\n    @endforeach\r\n</ul>\r\n\x3c!-- Si el controlador env\xeda los registros paginados --\x3e\r\n{{ $modelos->link() }}\r\n\x3c!-- ... --\x3e\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Directivas:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["if:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@if($condicion)\r\n    \x3c!-- Se muestra solo si $condicion = true --\x3e\r\n@else\r\n    \x3c!-- Se muestra solo si $condicion = false --\x3e\r\n@endif\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["auth:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@auth\r\n    \x3c!-- Se muestra solo si existe un usuario autenticado --\x3e\r\n@else\r\n    \x3c!-- Se muestra solo si no existe un usuario autenticado --\x3e\r\n@endauth\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["foreach:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@foreach ($elementos as $elemento)\r\n    {{ $elemento }}\r\n@endforeach\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 1:"})," al usar un foreach se crean algunas variables de interes:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$loop->first (Primero elemento)"}),"\n",(0,l.jsx)(n.li,{children:"$loop->last (\xdaltimo elemento)"}),"\n",(0,l.jsx)(n.li,{children:"$loop->index (Elemento actual, el primero tendr\xe1 el valor de cero)"}),"\n",(0,l.jsx)(n.li,{children:"$loop->iteration (Elemento actual, el primero tendr\xe1 el valor de uno)"}),"\n",(0,l.jsx)(n.li,{children:"$loop->remaining (Iteraciones restantes)"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 2:"})," para acceder al loop del padre en caso de un bucle foreach anidado:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$loop->parent->first (Primero elemento del bucle padre)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["class:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"<style>\r\n    .mi-estilo1 {\r\n        color: blue;\r\n    }\r\n    .mi-estilo2 {\r\n        color: green;\r\n    }\r\n</style>\r\n@foreach ($elementos as $elemento)\r\n    <span @class([ \r\n        'mi-estilo1' => $loop->first,\r\n        'mi-estilo2' => $loop->last,\r\n    ])>{{ $elemento }}</span>\r\n@endforeach\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["forelse:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@forelse ($elementos as $elemento)\r\n    {{ $elemento }}\r\n@empty\r\n    <p>No existen elementos a mostrar</p>\r\n@endforelse\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["for:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@for ($i = 0; $i < $count; i++)\r\n    {{ $i }}\r\n@endfor\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["continue:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- Forma 1 --\x3e\r\n@for ($i = 0; $i < $count; i++)\r\n    @if($i == 3)\r\n        <p>Cuando $i sea igual a tres se saltar\xe1 esta iteraci\xf3n a partir de aqu\xed</p>\r\n        @continue\r\n    @endif\r\n    {{ $i }}\r\n@endfor\r\n\x3c!-- Forma 2 --\x3e\r\n@for ($i = 0; $i < $count; i++)\r\n    <p>Cuando $i sea igual a tres se saltar\xe1 esta iteraci\xf3n a partir de aqu\xed</p>\r\n    @continue($i == 3)\r\n    {{ $i }}\r\n@endfor\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["break:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- Forma 1 --\x3e\r\n@for ($i = 0; $i < $count; i++)\r\n    @if($i == 3)\r\n        <p>Cuando $i sea igual a tres se saldr\xe1 del bucle</p>\r\n        @break\r\n    @endif\r\n    {{ $i }}\r\n@endfor\r\n\x3c!-- Forma 2 --\x3e\r\n@for ($i = 0; $i < $count; i++)\r\n    <p>Cuando $i sea igual a tres se saldr\xe1 del bucle</p>\r\n    @break($i == 3)\r\n    {{ $i }}\r\n@endfor\r\n``\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["while y php:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@php\r\n    $i = 1;\r\n@endphp\r\n\r\n@while ($i < $count)\r\n    {{ $i }}\r\n    @php\r\n        $i++;\r\n    @endphp\r\n@endwhile\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["for:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@for ($i = 0;$i < $count; $i++)\r\n    {{ $i }}\r\n@endfor\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["checked:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'<input type="checkbox" @checked($condicion) name="mi_checked">\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["selected:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'<option value="1" @selected($valor)>Opci\xf3n ...</option>\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["disabled:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"<button @disabled($condicion)>Bot\xf3n</button>\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["readonly y required:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'<input @readonly($condicion1) @required($condicion2) type="text" value="Readonly" />\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["include, includeIf, inlcudeWhen y includeFirst:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- la vista partial.form debe existir --\x3e\r\n@include('partial.form')\r\n\x3c!-- pasar par\xe1metros a la vista partial.form con la directiva include--\x3e\r\n@include('partial.form', ['parametro' => $valor])\r\n\x3c!-- si existe la vista partial.form se incluir\xe1 en esta vista --\x3e\r\n@includeIf('partial.form')\r\n\x3c!-- pasar par\xe1metros a la vista partial.form con la directiva includeIf--\x3e\r\n@includeIf('partial.form', ['parametro' => $valor])\r\n\x3c!-- se trae una vista si se cumple una condici\xf3n --\x3e\r\n@includeWhen($condicion, 'partial.form')\r\n\x3c!-- pasar par\xe1metros a la vista partial.form con la directiva includeWhen --\x3e\r\n@includeWhen($condicion, 'partial.form', ['parametro' => $valor])\r\n\x3c!-- si existe varias vistas y que se traiga la primera --\x3e\r\n@includeFirst(['partial.form1', 'partial.form2'])\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["error:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@error('variable')\r\n    {{ $message }}\r\n@enderror\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["isset (si la variable esta definida o no tiene un valor asignado):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@isset($variable)\r\n    <p>La variable esta definidad</p>\r\n@else\r\n    <p>La variable no esta definidad</p>\r\n@endisset\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["unless:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@unless($condicion)\r\n    <p>Este texto se mostrar\xe1 si $condicion tiene el valor de false</p>\r\n@endunless\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["empty:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@empty($variable)\r\n    <p>La variable $variable no existe o no tiene un valor asignado false</p>\r\n@endempty\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["env:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@env('local')\r\n    <p>Me encuentro en un entorno local</p>\r\n@endenv\r\n\r\n@env('production')\r\n    <p>Me encuentro en un entorno de producci\xf3n</p>\r\n@endenv\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["production:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@production\r\n    <p>Me encuentro en un entorno de producci\xf3n</p>\r\n@endproduction\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["switch:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@switch($caso)\r\n    @case(1)\r\n        <p>Caso 1</p>\r\n    @break\r\n    @case(2)\r\n        <p>Caso 2</p>\r\n    @break\r\n    @default\r\n        <p>Sin caso</p>\r\n@endswitch\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"migraciones",children:"Migraciones"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Documentaci\xf3n: ",(0,l.jsx)(n.a,{href:"https://laravel.com/docs/10.x/migrations",children:"https://laravel.com/docs/10.x/migrations"})]}),"\n",(0,l.jsxs)(n.li,{children:["Nombre de ejemplo de un archivo de migraci\xf3n y los posibles tipos de campos a definir:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Nombre: database\\migrations\\2014_10_12_000000_create_users_table.php"}),"\n",(0,l.jsxs)(n.li,{children:["C\xf3digo:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function up(): void\r\n{\r\n    Schema::create('users', function (Blueprint $table) {\r\n        $table->id();                                           // Crea la columna id\r\n        $table->string('name', 150);\r\n        $table->string('email')->unique();\r\n        $table->text('descripcion');\r\n        $table->longText('descripcion_muy_larga');\r\n        $table->timestamp('email_verified_at')->nullable();\r\n        $table->string('password');\r\n        $table->enum('status', [1, 2])->default(1);\r\n        $table->rememberToken();                                // Crea la columna remember_token\r\n        $table->foreignId('current_team_id')->nullable();\r\n        $table->string('profile_photo_path', 2048)->nullable();\r\n\r\n        // Restricciones de llave foranea con set null\r\n        $table->unsignedBigInteger('modelo_id')->nullable();\r\n        $table->foreign('modelo_id')\r\n            ->rerferences('id')->on('modelos')\r\n            ->onDelete('set null');\r\n\r\n        // Restricciones de llave foranea con cascade\r\n        $table->unsignedBigInteger('otro_modelo_id');\r\n        $table->foreign('otro_modelo_id')\r\n            ->rerferences('id')->on('otro_modelos')\r\n            ->onDelete('cascade');\r\n\r\n        $table->timestamps();                                   // Crea las columnas created_at y updated_at\r\n    });\r\n}\r\n// ...   \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejecutar las migraciones:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ php artisan migrate"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear migraci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":migration"," nombretabla"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear migraci\xf3n siguiendo las convenciones de Laravel:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":migration"," create_nombretabla_table"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," al usar esta convenci\xf3n se crean las estructuras de los m\xe9todos ",(0,l.jsx)(n.strong,{children:"up"})," y ",(0,l.jsx)(n.strong,{children:"down"})," en el archivo de la migraci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear migraci\xf3n siguiendo las convenciones de Laravel para una tabla auxiliar:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":migration"," create_nombretabla1_nombretabla2_table   (escribir en orden alfab\xe9tico)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Revertir cambios de la \xfaltima migraci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan migrate",":rollback"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Revertir todos los cambios y volver a ejecutar las migraciones (elimina la tabla sin ejecutar el m\xe9todo ",(0,l.jsx)(n.strong,{children:"down"}),"):","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan migrate",":fresh"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Revertir todos los cambios y volver a ejecutar las migraciones (ejecuta el m\xe9todo ",(0,l.jsx)(n.strong,{children:"down"}),"):","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan migrate",":refresh"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Eliminar todas las tablas de la base de datos:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan migrate",":reset"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Agregar una columna a una migraci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":migration"," add_micolumna_to_mitabla_table"]}),"\n",(0,l.jsxs)(n.li,{children:["Luego modificar la migraci\xf3n para definir la nueva columna:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function up() {\r\n    Schema::table('mitabla', function(Blueprint $table) {\r\n        $table->string('micolumna')->nullable()->after('otracolumna');\r\n    });\r\n}\r\n// ...\r\npublic function down() {\r\n    Schema::table('mitabla', function(Blueprint $table) {\r\n        $table->dropColumn('micolumna');\r\n    });\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Modificar un campo de una migraci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Instalar dependencia:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ composer require doctrine/dbal"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear migraci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":migration"," cambiar_propiedades_to_mitabla_table"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Luego modificar la migraci\xf3n para definir la nueva columna:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function up() {\r\n    Schema::table('mitabla', function(Blueprint $table) {\r\n        $table->string('micolumna', 50)->nullable()->change();\r\n    });\r\n}\r\n// ...\r\npublic function down() {\r\n    Schema::table('mitabla', function(Blueprint $table) {\r\n        $table->string('micolumna', 255)->nullable(false)->change();\r\n    });\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"modelos",children:"Modelos:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un modelo:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":model"," Modelo"]}),"\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":model"," Modelo -m        (con migraci\xf3n)"]}),"\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":model"," Modelo -mc       (con migraci\xf3n y controlador)"]}),"\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":model"," Modelo -mcs      (con migraci\xf3n, controlador y seeder)"]}),"\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":model"," Modelo -mcsf     (con migraci\xf3n, controlador, seeder y factory)"]}),"\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":model"," Modelo -a        (con migraci\xf3n, controlador, seeder y factory)"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Indicar a un modelo la tabla a administrar:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    protected $table = "modelos";\r\n}\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Definir asignaci\xf3n masiva (indicando los campos a considerar):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    protected $fillable = [\r\n        'propiedad1'\r\n    ];\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Definir asignaci\xf3n masiva (indicando los campos a no considerar):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    protected $guarded = [\r\n        'propiedad1'\r\n    ];\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Definir asignaci\xf3n masiva (indicando todos los campos):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    protected $guarded = [];\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Establecer ralaci\xf3n 1:1 de ",(0,l.jsx)(n.strong,{children:"Modelo"})," a ",(0,l.jsx)(n.strong,{children:"OtroModelo"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    // Forma manual\r\n    public function otro_modelo() {\r\n        $otro_modelo = OtroModelo::where('modelo_id', $this->id)->first();\r\n        return $otro_modelo;\r\n    }\r\n\r\n    // Forma simplificada, es funcionalmente igual a la anterior\r\n    // Este m\xe9todo considera que la llave primaria del Modelo modelo es 'id', \r\n    // y la llave for\xe1nea de OtroModelo es modelo_id\r\n    public function otro_modelo_forma2() {\r\n        return $this->hasOne('App\\Models\\OtroModelo');\r\n    }\r\n\r\n    // Forma simplificada, sin seguir las convenciones de laravel\r\n    // Este m\xe9todo considera que la llave primaria del Modelo modelo no sigue las convenciones\r\n    // y la llave for\xe1nea de OtroModelo tampoco sigue las convenciones\r\n    public function otro_modelo_forma3() {\r\n        return $this->hasOne('App\\Models\\OtroModelo', 'modelo_id', 'id');\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Establecer ralaci\xf3n 1:1 inversa de ",(0,l.jsx)(n.strong,{children:"OtroModelo"})," a ",(0,l.jsx)(n.strong,{children:"Modelo"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass OtroModelo extends Model {\r\n    // ...\r\n    // Forma manual\r\n    public function modelo() {\r\n        $modelo = Modelo::find($this->modelo_id);\r\n        return $modelo;\r\n    }\r\n\r\n    // Forma simplificada, es funcionalmente igual a la anterior\r\n    public function modelo2() {\r\n        return $this->belongsTo('App\\Models\\Modelo');\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Establecer ralaci\xf3n 1",":n"," de ",(0,l.jsx)(n.strong,{children:"OtroModelo"})," a ",(0,l.jsx)(n.strong,{children:"Modelo"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    // Forma simplificada\r\n    public function otro_modelos() {\r\n        return $this->hasMany('App\\Models\\OtroModelo');\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Establecer ralaci\xf3n 1",":n"," inversa de ",(0,l.jsx)(n.strong,{children:"OtroModelo"})," a ",(0,l.jsx)(n.strong,{children:"Modelo"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass OtroModelo extends Model {\r\n    // ...\r\n    // Forma simplificada\r\n    public function modelo() {\r\n        return $this->belongsTo('App\\Models\\Modelo');\r\n    }\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Establecer ralaci\xf3n n",":n"," de ",(0,l.jsx)(n.strong,{children:"OtroModelo"})," a ",(0,l.jsx)(n.strong,{children:"Modelo"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    // Forma simplificada\r\n    public function otro_modelos() {\r\n        return $this->belongsToMany('App\\Models\\OtroModelo');\r\n    }\r\n\r\n    // Ejemplo de c\xf3digo para asignar un valor\r\n    // $modelo = Modelo::find($modelo_id);\r\n    // $modelo->otro_modelos()->attach($otro_modelo_id);\r\n\r\n    // Ejemplo de c\xf3digo para quitar un valor\r\n    // $modelo = Modelo::find($modelo_id);\r\n    // $modelo->otro_modelos()->detach($otro_modelo_id);\r\n\r\n    // Ejemplo de c\xf3digo para asignar varios valores\r\n    // $modelo = Modelo::find($modelo_id);\r\n    // $modelo->otro_modelos()->attach([$otro_modelo1_id, $otro_modelo2_id]);\r\n\r\n    // Ejemplo de c\xf3digo para quitar varios valores\r\n    // $modelo = Modelo::find($modelo_id);\r\n    // $modelo->otro_modelos()->detach([$otro_modelo1_id, $otro_modelo2_id]);\r\n\r\n    // Ejemplo de c\xf3digo para quitar todos los valores y luego asignar varios valores\r\n    // $modelo = Modelo::find($modelo_id);\r\n    // $modelo->otro_modelos()->sync([$otro_modelo1_id, $otro_modelo2_id]);\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Relaciones polim\xf3rficas:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Cuando establezca las relaciones polim\xf3rficas del medelo ",(0,l.jsx)(n.strong,{children:"Tabla"})," tener en cuenta:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["En el modelo ",(0,l.jsx)(n.strong,{children:"Tabla"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"public function tablanable() {\r\n    return $this->morphTo();\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["En el modelo ",(0,l.jsx)(n.strong,{children:"Modelo"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// Relaci\xf3n uno a uno polim\xf3rfica\r\npublic function tabla() {\r\n    return $this->morphOne('App\\Models\\Tabla', 'tablaable');\r\n}\r\n\r\n// Relaci\xf3n uno a muchos polim\xf3rfica\r\n// El 2do par\xe1metro es el nombre del m\xe9todo definido en el modelo Tabla\r\npublic function tablas() {\r\n    return $this->morphMany('App\\Models\\Tabla', 'tablaable');   \r\n}\r\n\r\n// Relaci\xf3n muchos a muchos polim\xf3rfica\r\n// El 2do par\xe1metro es el nombre de la tabla intermedia en singular\r\npublic function tablas2() {\r\n    return $this->morphToMany('App\\Models\\Tabla', 'tablaable');\r\n}\r\n\r\n// Relaci\xf3n muchos a muchos inversa polim\xf3rficas\r\n// El 2do par\xe1metro es el nombre de la tabla intermedia en singular\r\npublic function tablas3() {\r\n    return $this->morphedByMany('App\\Models\\Tabla', 'tablaable');\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["La tabla ",(0,l.jsx)(n.strong,{children:"tablas"})," deber\xe1 tener campos similares a:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"campo1"}),"\n",(0,l.jsx)(n.li,{children:"campo2"}),"\n",(0,l.jsx)(n.li,{children:"tablaable_id"}),"\n",(0,l.jsx)(n.li,{children:"tablaable_type"}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 1:"})," La clave primaria ser\xe1 una clave compuesta por los campos ",(0,l.jsx)(n.strong,{children:"tablaable_id"})," y ",(0,l.jsx)(n.strong,{children:"tablaable_type"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 2:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejemplo del archivo de migraci\xf3n para relaciones polim\xf3rficas uno a uno:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function up(): void\r\n{\r\n    Schema::create('tablas', function (Blueprint $table) {\r\n        $table->string('campo1');\r\n        $table->string('campo2');\r\n        $table->unsignedBigInteger('tablaable_id');\r\n        $table->string('tablaable_type');\r\n        // Definici\xf3n de la llave primaria compuesta\r\n        $table->primary(['tablaable_id', 'tablaable_type']);\r\n        $table->timestamps();\r\n    });\r\n}\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo del archivo de migraci\xf3n para relaciones polim\xf3rficas uno a muchos:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function up(): void\r\n{\r\n    Schema::create('tablas', function (Blueprint $table) {\r\n        $table->id();\r\n        $table->string('campo1');\r\n        $table->string('campo2');\r\n        $table->unsignedBigInteger('tablaable_id');\r\n        $table->string('tablaable_type');\r\n        $table->timestamps();\r\n    });\r\n}\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo del archivo de migraci\xf3n para relaciones polim\xf3rficas uno a muchos:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function up(): void\r\n{\r\n    Schema::create('tablas', function (Blueprint $table) {\r\n        $table->id();\r\n        $table->string('campo1');\r\n        $table->string('campo2');\r\n        $table->timestamps();\r\n    });\r\n}\r\n// ...\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["En este caso hay que generar una tabla intermedia:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":migration"," create_tablaables_table"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de construcci\xf3n de la migraci\xf3n:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function up(): void\r\n{\r\n    Schema::create('tablaables', function (Blueprint $table) {\r\n        $table->id();\r\n        $table->unsignedBigInteger('tablaable_id');\r\n        $table->string('tablaable_type');\r\n        $table->unsignedBigInteger('tabla_id');\r\n        $table->foreign('tabla_id')->references('id')->on('tablas')->onDelete('cascade');\r\n        $table->timestamps();\r\n    });\r\n}\r\n// ...\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 3:"})," Creaci\xf3n de registros:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Desde el modelo ",(0,l.jsx)(n.strong,{children:"Tabla"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"Tabla::create([\r\n    'campo1' => 'Valor campo 1',\r\n    'campo2' => 'Valor campo 2',\r\n    'tablaable_id' => $modelo_id,\r\n    'tablaable_type' => 'App\\Models\\Modelo'\r\n]);\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Desde el modelo ",(0,l.jsx)(n.strong,{children:"Modelo"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"$modelo->tabla()->create([\r\n    'campo1' => 'Valor campo 1',\r\n    'campo2' => 'Valor campo 2'\r\n]);\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Para crear url amigables:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'// ...\r\nclass Modelo extends Model {\r\n    // ...\r\n    public function getRouteKeyName() {\r\n        return "campo_slug";\r\n    }\r\n}\n'})}),"\n"]}),"\n",(0,l.jsx)(n.li,{}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"tinker",children:"Tinker"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejecutar Tinker:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ php artisan tinker"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Salir de Tinker:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"exit"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Usar un modelo:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"use App\\Models\\Modelo"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear una instancia de un modelo:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelo = new Modelo;"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Asignar un valor a una propiedad de un modelo:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelo->propiedad = 'Valor';"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ver el contendido de un modelo:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelo;"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Agregar instancia del modelo como un registro en tabla:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelo->save();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Modificar un registro","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelo->propiedad = 'otro valor';"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelo->save();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar todos los registros de una tabla:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::all();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar todos los registros de una tabla aplicando un filtro:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::where('propiedad1', 'valor1')->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar todos los registros de una tabla aplicando un filtro y un orden:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::where('propiedad1', 'valor1')->orderBy('propiedad2', 'desc')->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," por defecto ",(0,l.jsx)(n.strong,{children:"orderBy"})," ordena de manera ascendente: ",(0,l.jsx)(n.strong,{children:"asc"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar el primer registro:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::where('propiedad1', 'valor1')->orderBy('propiedad2', 'desc')->first();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar solo los campos ",(0,l.jsx)(n.strong,{children:"propiedad1"})," y ",(0,l.jsx)(n.strong,{children:"propiedad2"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::select('propiedad1', 'propiedad2')->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::select('propiedad1', 'propiedad2')->orderBy('propiedad2')->where('propiedad1', 'valor1')->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar solo los campos ",(0,l.jsx)(n.strong,{children:"propiedad1"})," y ",(0,l.jsx)(n.strong,{children:"propiedad2"})," usando alias:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::select('propiedad1 as p1', 'propiedad2 as p2')->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar solo 5 registros:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::select('propiedad1 as p1', 'propiedad2 as p2')->take(5)->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar un registro con ",(0,l.jsx)(n.strong,{children:"id"})," = 3:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::find(3);"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar todos los registros con ",(0,l.jsx)(n.strong,{children:"id"})," > 3:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::where('id', '>', 3)->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," operadores de comparaci\xf3n que se pueden usar:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"+ Igual: =\r\n+ Mayor: >\r\n+ Mayor o igual: >=\r\n+ Menor: '<'\r\n+ Menor o igual: <=\r\n+ Diferente: <>\r\n+ Que contenga: LIKE\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Recuperar todos los registros que contenga el texto ",(0,l.jsx)(n.strong,{children:"texto"})," en cualquier parte del campo:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsx)(n.p,{children:"$modelos = Modelo::where('propiedad3', 'LIKE', '%texto%')->get();"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"eloquent-1",children:"Eloquent:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Pasar todos los registros:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass NombreController extends Controller\r\n{\r\n    // ...\r\n    public function mi_vista() {\r\n        $modelos = Modelo::all();\r\n        return view('mi_vista', compact('modelos'));\r\n    }\r\n    // ...\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Pasar registros paginados:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass NombreController extends Controller\r\n{\r\n    // ...\r\n    public function mi_vista() {\r\n        $modelos = Modelo::paginate();  // Por defecto env\xeda 15 registros\r\n        return view('mi_vista', compact('modelos'));\r\n    }\r\n    // ...\r\n}\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota 1:"})," para navegar entre lotes de registros en la direcci\xf3n del navegador podemos escribir algo as\xed:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"http://miaplicacion.test/modelos?page=%5Bnumero",children:"http://miaplicacion.test/modelos?page=[numero"}),"]"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"seeder",children:"Seeder"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Programar seeder en ",(0,l.jsx)(n.strong,{children:"database\\seeders\\DatabaseSeeder.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'// ...\r\nuse App\\Models\\Modelo;\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    // ...\r\n    public function run(): void\r\n    {\r\n        // ...\r\n        $modelo = new Modelo();\r\n        $modelo->propiedad = "Valor de mi propiedad";\r\n        $modelo->save();\r\n    }\r\n}    \n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejecutar seeder:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan db",":seed"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear, programar y cargar un seeder:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":seeder"," ModeloSeeder"]}),"\n",(0,l.jsxs)(n.li,{children:["Programar seeder en ",(0,l.jsx)(n.strong,{children:"database\\seeders\\ModeloSeeder.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'// ...\r\nuse App\\Models\\Modelo;\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    // ...\r\n    public function run(): void\r\n    {\r\n        $modelo = new Modelo();\r\n        $modelo->propiedad = "Valor de mi propiedad";\r\n        $modelo->save();\r\n    }\r\n}    \n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Cargar el en ",(0,l.jsx)(n.strong,{children:"database\\seeders\\DatabaseSeeder.php"}),":"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Illuminate\\Database\\Seeder;\r\nuse Illuminate\\Support\\Facades\\Storage;\r\nuse App\\Models\\Modelo;\r\nuse App\\Models\\Post;\r\n\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    // ...\r\n    public function run(): void\r\n    {\r\n        // ...\r\n        $this->call(ModeloSeeder::class);\r\n\r\n        // Llamar a un factory desde el modelo\r\n        Modelo::factory(8)->create();\r\n\r\n        // Ejemplo para tratar imagenes\r\n        Storage::deleteDirectory('posts');\r\n        Storage::makeDirectory('posts');\r\n        $posts = Post::factory(100)->create();\r\n        foreach($post as $post) {\r\n            Image::factory(1)->create([\r\n                'imageable_id' => $post->id,\r\n                'imageable_type' => Post::class\r\n            ]);\r\n        }\r\n    }\r\n}    \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Reestablecer tablas de la base de datos y ejecutar los seeders:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan migrate",":fresh"," --seed"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Migrar y ejecutar los seeders:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ php artisan migrate --seed"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"factory",children:"Factory"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un factory:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":factory"," ModeloFactory"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": cuando se crea de este modo, es necesario adaptar el c\xf3digo al modelo a emplear."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear y programar un factory inicando el modelo a usar:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":factory"," ModeloFactory --model=Modelo"]}),"\n",(0,l.jsxs)(n.li,{children:["Programa factory ****:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Models\\Modelo;\r\nuse App\\Models\\OtroModelo;\r\nuse Illuminate\\Support\\Str;\r\n// ...\r\nclass ModeloFactory extends Factory\r\n{\r\n    // ...\r\n    public function definition(): array\r\n    {\r\n        $propiedad4 = $this->faker->unique->word(20),   // Una palabra de m\xe1ximo 20 caracteres que no se repite\r\n        return [\r\n            'propiedad1' => $this->faker->sentence(),   // Oraci\xf3n\r\n            'propiedad2' => $this->faker->paragraph(),  // P\xe1rrafo                    \r\n            'propiedad3' => $this->faker->randomElement(['Valor 1', 'Valor 2', 'Valor 3']),   // Escoger entre varios elementos\r\n            'propiedad4' => $propiedad4,\r\n            'propiedad5' => Str::slug($propiedad4),\r\n            'propiedad6' => $this->faker->text(300),   // Texto de 300 caracteres\r\n            'propiedad7' => OtroModelo::all()->random()->id,   // Escoger al azar un id del modelo OtroModelo\r\n            // Par\xe1metros: ruta, ancho, alto, catergoria (ya no funciona, ruta_completa)\r\n            // Si ruta_completa es:\r\n            // true: //public/storage/img/imagen.jpg\r\n            // false: /imagen.jpg\r\n            'propiedad8' => $this->faker->image('public/storage/img', 640, 480, null, true)\r\n\r\n\r\n        ];\r\n    }\r\n}        \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Usar un factory en un seeder:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Programar seeder ",(0,l.jsx)(n.strong,{children:"database\\seeders\\ModeloSeeder.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Models\\Modelo;\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    // ...\r\n    public function run(): void\r\n    {\r\n        // Crea 50 registros del modelo Modelo tal como est\xe1n definidos en el factory\r\n        Modelo::factory(50)->create();\r\n    }\r\n}    \n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": para este tipo de seeder, se puede prescindir de este y ejecutar ",(0,l.jsx)(n.strong,{children:"Modelo::factory(50)->create();"})," directamente en ",(0,l.jsx)(n.strong,{children:"database\\seeders\\DatabaseSeeder.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Models\\Modelo;\r\nuse Illuminate\\Database\\Seeder;\r\n\r\nclass DatabaseSeeder extends Seeder\r\n{\r\n    // ...\r\n    public function run(): void\r\n    {\r\n        // ...\r\n        Modelo::factory(50)->create();\r\n    }\r\n}    \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"mutadores-y-accesores",children:"Mutadores y accesores:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Agregar un mutador y un accesor a el modelo ",(0,l.jsx)(n.strong,{children:"Modelo"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Modificar el modelo ",(0,l.jsx)(n.strong,{children:"app\\Models\\Modelo.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Illuminate\\Database\\Eloquent\\Casts\\Attribute;\r\n\r\nclass Modelo extends Model\r\n{\r\n    // ...\r\n    // Definir m\xe9todo para administrar el mutador y el accesor\r\n    // El m\xe9todo debe recibir el nombre del atributo que se desea modificar\r\n    // Usando la forma tradicional\r\n    protected function propiedad1(): Attribute {\r\n        return new Attribute(\r\n            // Accesor\r\n            get: function($value) {\r\n                // retornar el valor aplicando la transformaci\xf3n deseada\r\n                return ucwords($value);\r\n            },\r\n            // Mutador\r\n            set: function($value) {\r\n                // retornar el valor aplicando la transformaci\xf3n deseada\r\n                return strtolower($value);\r\n            }\r\n        );\r\n    }\r\n\r\n    // Definir m\xe9todo para administrar el mutador y el accesor\r\n    // El m\xe9todo debe recibir el nombre del atributo que se desea modificar\r\n    // Usando funciones flecha\r\n    protected function propiedad2(): Attribute {\r\n        return new Attribute(\r\n            // Accesor\r\n            get: fn($value) => ucwords($value),\r\n            // Mutador\r\n            set: fn($value) => strtolower($value)\r\n        );\r\n    }\r\n\r\n    // Definir m\xe9todo para administrar el mutador y el accesor\r\n    // El m\xe9todo debe recibir el nombre del atributo que se desea modificar\r\n    // Usando la forma antigua\r\n    // Accesor\r\n    protected function getPropiedad3Attribute($value) {\r\n        return  ucwords($value);\r\n    }\r\n    // Mutador\r\n    protected function setPropiedad3Attribute($value) {\r\n        $this->attributes['propiedad3'] = strtolower($value);\r\n    }\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"form-request",children:"Form Request:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un Form Request:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":request"," StoreModelo"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," se genera el archivo ",(0,l.jsx)(n.strong,{children:"app\\Http\\Requests\\StoreModelo.php"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de programaci\xf3n del Form Request ",(0,l.jsx)(n.strong,{children:"app\\Http\\Requests\\StoreModelo.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass StoreModelo extends FormRequest\r\n{\r\n    // Reglas de autorizaci\xf3n (normalmente se deja as\xed)\r\n    public function authorize(): bool\r\n    {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n    // Reglas de autorizaci\xf3n (verificando usuario autenticado)\r\n    public function authorize(): bool\r\n    {\r\n        if($this->usuer_id == auth()->user()->id){\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // Reglas de validaci\xf3n\r\n    public function rules(): array\r\n    {\r\n        return [\r\n            'propiedad1' => 'required|min:12',\r\n            'propiedad2' => 'required|unique:nombre_tabla',\r\n            'propiedad3' => \"required|unique:nombre_tabla,propiedad3,$modelo->id\",\r\n            'propiedad4' => 'in:1,2',\r\n            'propiedad5_file' => 'image'\r\n        ];\r\n    }\r\n\r\n    // Reglas de validaci\xf3n condicionales\r\n    public function rules(): array\r\n    {\r\n        // Capturar par\xe1metro de la ruta\r\n        $parametro = $this->route()->parameter('paremetro');\r\n        \r\n        $rules = [\r\n            'propiedad1' => 'required|min:12',\r\n            'propiedad2' => 'required|unique:nombre_tabla',\r\n            'propiedad3' => \"required|unique:nombre_tabla,propiedad3,$modelo->id\",\r\n            'propiedad4' => 'in:1,2'\r\n        ];\r\n\r\n        if($parametro) {\r\n            $rules['propiedad2'] = \"required|unique:nombre_tabla,propiedad3,$parametro\"\r\n        }\r\n\r\n        if($this->propiedad4 == 2) {\r\n            $rules = array_merge($rules, [\r\n                'propiedad5' = 'required'\r\n            ]);\r\n        }\r\n\r\n        return $rules;\r\n    }\r\n\r\n    // M\xe9todo para personalizar los mensaje de error\r\n    public function messages(): array\r\n    {\r\n        return [\r\n            'propiedad1.required' => 'La propiedad 1 es obligatoria'\r\n        ];\r\n    }\r\n\r\n    // M\xe9todo para personalizar los atributos\r\n    public function attributes(): array\r\n    {\r\n        return [\r\n            'propiedad1' => 'Cambio de nombre'\r\n        ];\r\n    }\r\n}        \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de uso en el controlador que lo invoca ",(0,l.jsx)(n.strong,{children:"app\\Http\\Controllers\\ModeloController.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Http\\Requests\\StoreModelo;\r\n// ...\r\npublic function store(StoreModelo $request) {\r\n\r\n    $modelo = new Modelo();\r\n    $modelo->propiedad1 = $request->propiedad1;\r\n    $modelo->save();\r\n    return redirect()->route('modelos.show', $modelo);\r\n}\r\n// ...   \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"policy",children:"Policy:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear una policy:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":policy"," ModeloPolicy"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Implementar una regla de autorizaci\xf3n en ",(0,l.jsx)(n.strong,{children:"app\\Policies\\ModeloPolicy.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Models\\Modelo;\r\nuse App\\Models\\User;\r\n\r\nclass ModeloPolicy\r\n{\r\n    // ...\r\n    // Crear regla de autorizaci\xf3n\r\n    public function regla_autorizacion(User $user, Modelo $modelo) {\r\n        $condicion_de_autorizacion = true;  // Ejemplo: $user->id == $modelo->user_id\r\n        if($condicion_de_autorizacion) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}    \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Hacer referencia a la policy en el modelo ",(0,l.jsx)(n.strong,{children:"app\\Http\\Controllers\\ModeloController.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function edit(Modelo $modelo) {\r\n    $this->authorize('regla_autorizacion', $modelo);\r\n    // ...\r\n}\r\n\r\npublic function update(Request $request, Modelo $modelo) {\r\n    $this->authorize('regla_autorizacion', $modelo);\r\n    // ...\r\n}\r\n\r\npublic function destroy(Modelo $modelo) {\r\n    $this->authorize('regla_autorizacion', $modelo);\r\n    // ...\r\n}    \r\n// ...\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"configuraci\xf3n",children:"Configuraci\xf3n"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Configurar proyecto al espa\xf1ol:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Editar ",(0,l.jsx)(n.strong,{children:"config\\app.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nreturn [\r\n    // ...\r\n    'locale' => 'es',\r\n    // ...\r\n];        \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"mailables",children:"Mailables"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Indicar credenciales del servicio de correos a utilizar en ",(0,l.jsx)(n.strong,{children:".env"}),":","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejemplo:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-env",children:'MAIL_MAILER=smtp\r\nMAIL_HOST=mailpit\r\nMAIL_PORT=1025\r\nMAIL_USERNAME=null\r\nMAIL_PASSWORD=null\r\nMAIL_ENCRYPTION=null\r\nMAIL_FROM_ADDRESS="hello@example.com"\r\nMAIL_FROM_NAME="${APP_NAME}"        \n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un mailable:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":mail"," CorreoMailable"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," esta acci\xf3n crea el siguiente archivo: ",(0,l.jsx)(n.strong,{children:"app\\Mail\\CorreoMailable.php"}),",."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear vista del correo ",(0,l.jsx)(n.strong,{children:"resources\\views\\emails\\correo.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'<!DOCTYPE html>\r\n<html lang="es">\r\n<head>\r\n    <meta charset="UTF-8">\r\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\r\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\r\n    <title>Correo</title>\r\n</head>\r\n<body>\r\n    <h1>Correo</h1>\r\n    <p>{{ $data[\'message\'] }}</p>\r\n</body>\r\n</html>\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," si para el correo se usan estilos bootstrap, tailwind, etc, ser\xe1 necesario escribir los estilos en el mismo correo."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Modificar ",(0,l.jsx)(n.strong,{children:"app\\Mail\\CorreoMailable.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Illuminate\\Mail\\Mailables\\Address;\r\n\r\nclass CorreoMailable extends Mailable\r\n{\r\n    // ...\r\n    public $data;\r\n\r\n    // ...\r\n    public function __construct($data)\r\n    {\r\n        $this->data = $data;\r\n    }\r\n    // ...\r\n    public function envelope(): Envelope\r\n    {\r\n        return new Envelope(\r\n            from: new Address($this->data['from_email'], $this->data['from_name']),\r\n            subject: $this->data['asunto']\r\n        );\r\n    }\r\n    // ...\r\n    public function content(): Content\r\n    {\r\n        return new Content(\r\n            view: 'emails.correo'\r\n        );\r\n    }\r\n    // ...\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de invocaci\xf3n del correo:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Mail\\CorreoMailable;\r\nuse Illuminate\\Support\\Facades\\Mail;\r\n// ...\r\n$data = [\r\n    'from_email' => 'mi.correo1@correo.com', \r\n    'from_name' => 'Mi nombre', \r\n    'asunto' => 'asunto', \r\n    'message' => 'mensaje...'\r\n]\r\n\r\nMail::to('mi.correo1@correo.com')->send(new CorreoMailable($data));\r\n\r\n// Otra forma:\r\n$correo = new \\App\\Mail\\CorreoMailable($data);\r\n\\Illuminate\\Support\\Facades\\Mail::to('mi.correo1@correo.com')->bcc('mi.correo2@correo.com')->send($correo);\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"componentes",children:"Componentes"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un componente blade an\xf3nimo:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear archivo ",(0,l.jsx)(n.strong,{children:"resources\\views\\components\\componente.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@props(['title', 'clase' => 'clase2', 'variable2'])\r\n\r\n@php\r\n    switch($clase) {\r\n        case 'clase1':\r\n            $clases = \"bg-blue-100\";\r\n            break;\r\n        case 'clase2':\r\n            $clases = \"bg-red-100\";\r\n            break;\r\n        default:\r\n            $clases = \"bg-black-100\";\r\n            break;\r\n    }\r\n@endphp\r\n\r\n<div {{ $attributes->merge(['class' => 'm-5' ]) }}>\r\n    <h1 class=\"fs-2 {{ $clases }}\">{{ $title }}</h1>\r\n    <p>{{ $otravariable }}</p>\r\n    <p>{{ $variable2 }}</p>\r\n    <p>\r\n        {{ $slot }} {{-- Aqu\xed enviaremos por par\xe1metro el contenido principal de mi componente --}}\r\n    </p>\r\n    {{-- En la variable attributes se almacenan todas las variables que no se rescatan en los props o en los slut --}}\r\n    <p>{{ $attributes }}</p>\r\n</div>    \n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," para ver el componente, en la vista que lo invoca, escribir:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'@php\r\n    $variable = \'Valor de la variable\';\r\n@endphp\r\n\r\n<x-componente title="T\xedtulo del componente" clase="clase1" :variable2="$variable" id="mi_id">\r\n    <x-slot name="otravariable">\r\n        Contenido de mi otra variable\r\n    </x-slot>\r\n    Contenido principal del componente\r\n</x-componente>\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un componente blade de clase:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejecutar:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":component"," ComponenteClase"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," crea dos archivos:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"L\xf3gica: app\\View\\Components\\ComponenteClase.php"}),"\n",(0,l.jsx)(n.li,{children:"Vista: resources\\views\\components\\componente-clase.blade.php"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Dise\xf1ar vista del componente:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"<div {{ $attributes->merge(['class' => 'm-5' ]) }}>\r\n    <h1 class=\"fs-2 {{ $clases }}\">{{ $title }}</h1>\r\n    <p>{{ $otravariable }}</p>\r\n    <p>{{ $variable2 }}</p>\r\n    <p>\r\n        {{ $slot }} {{-- Aqu\xed enviaremos por par\xe1metro el contenido principal de mi componente --}}\r\n    </p>\r\n    {{-- En la variable attributes se almacenan todas las variables que no se rescatan en los props o en los slut --}}\r\n    <p>{{ $attributes }}</p>\r\n</div>        \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Programar l\xf3gica del componente:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass ComponenteClase extends Component\r\n{\r\n    public $title;\r\n    public $clases;\r\n    public $variable2;\r\n    // ...\r\n    public function __construct($title, $clase = 'clase1', $variable2)\r\n    {\r\n        switch($clase) {\r\n            case 'clase1':\r\n                $clases = \"bg-blue-100\";\r\n                break;\r\n            case 'clase2':\r\n                $clases = \"bg-red-100\";\r\n                break;\r\n            default:\r\n                $clases = \"bg-black-100\";\r\n                break;\r\n        }\r\n\r\n        $this->title = $title;\r\n        $this->clases = $clases;\r\n        $this->variable2 = $variable2;\r\n    }\r\n    // ...\r\n}\n"})}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Se invoca como el componente an\xf3nimo."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"middlewares",children:"Middlewares:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejemplo de creaci\xf3n de un middleware:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear middleware:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":middleware"," MiddlewarePrueba"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," esta acci\xf3n crea el middleware en ",(0,l.jsx)(n.strong,{children:"app\\Http\\Middleware\\MiddlewarePrueba.php"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Establecer l\xf3gica del middleware en ",(0,l.jsx)(n.strong,{children:"app\\Http\\Middleware\\MiddlewarePrueba.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Registrar middleware en ",(0,l.jsx)(n.strong,{children:"app\\Http\\Kernel.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nprotected $middlewareAliases = [\r\n    // ...\r\n    'prueba' => \\App\\Http\\Middleware\\MiddlewarePrueba::class\r\n];\r\n// ...        \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear rutas en ",(0,l.jsx)(n.strong,{children:"wireui2024\\routes\\web.php"})," para probar middleware:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"Route::get('prueba', function() {\r\n    return \"Has accedido correctamente a esta ruta\";\r\n})->middleware('prueba');\r\n\r\nRoute::get('prueba2', function() {\r\n    return \"Has accedido correctamente a esta ruta\";\r\n})->middleware(['prueba', 'auth:sanctum']);\r\n\r\nRoute::get('noautorizado', function() {\r\n    return \"No estas autorizado para acceder a esta ruta\";\r\n});\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"storage",children:"Storage:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Acceder al storage:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'<img src="{{ Storage::url($ruta) }}" alt="">\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"provider",children:"Provider:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Indicar vista con la que se iniciar\xe1 la aplicaci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Modificar el provider ",(0,l.jsx)(n.strong,{children:"app\\Providers\\RouteServiceProvider.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass RouteServiceProvider extends ServiceProvider\r\n{\r\n    // ...\r\n    public const HOME = '/mi_ruta';\r\n    // ...\r\n}        \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un archivo de rutas:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear archivo de rutas ",(0,l.jsx)(n.strong,{children:"routes\\mis_rutas.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"<?php\r\n\r\nuse Illuminate\\Support\\Facades\\Route;\r\n// ...       \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Modificar provider ",(0,l.jsx)(n.strong,{children:"app\\Providers\\RouteServiceProvider.php"})," para que ",(0,l.jsx)(n.strong,{children:"mis_rutas"})," se reconozca como archivo de rutas:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function boot(): void\r\n{\r\n    // ...\r\n    $this->routes(function () {\r\n        // ...\r\n        Route::middleware('web', 'otros_middleware')    // Por ejemplo: auth para usuarios autenticados\r\n            ->prefix('mi_prefijo_en_ruta')\r\n            ->group(base_path('routes/mi_ruta.php'));\r\n    });\r\n}        \r\n// ...       \n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Indicar que una ruta recibir\xe1 un valor n\xfamerico:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Modificar el provider ",(0,l.jsx)(n.strong,{children:"app\\Providers\\RouteServiceProvider.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass RouteServiceProvider extends ServiceProvider\r\n{\r\n    // ...\r\n    public function boot(): void\r\n    {\r\n        Route::pattern('id', '[0-9]+');\r\n        // ...\r\n    }\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Pasar par\xe1metros a todas las vistas:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Modificar el provider ",(0,l.jsx)(n.strong,{children:"app\\Providers\\AppServiceProvider.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Illuminate\\Support\\Facades\\View;\r\n\r\nclass AppServiceProvider extends ServiceProvider\r\n{\r\n    // ...\r\n    public function boot(): void\r\n    {\r\n        View::share('nombre_variable', 'valor de la variable nombre_variable');\r\n        /*\r\n            Ahora, desde cualquier vista se podr\xe1 acceder a $nombre_variable\r\n        */\r\n    }\r\n}        \n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": es mejor pr\xe1ctica realizar esta acci\xf3n en un provider especifico para esto, por ejemplo se podr\xeda crear un provider de nombre ",(0,l.jsx)(n.strong,{children:"ViewServiceProvider"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un provider:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":provider"," PruebaServiceProvider"]}),"\n",(0,l.jsxs)(n.li,{children:["*",(0,l.jsx)(n.em,{children:"Nota"}),": el provider se creo en ",(0,l.jsx)(n.strong,{children:"app\\Providers\\PruebaServiceProvider.php"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Registrar provider en ",(0,l.jsx)(n.strong,{children:"config\\app.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nreturn [\r\n    // ...\r\n    'providers' => ServiceProvider::defaultProviders()->merge([\r\n        // ...\r\n        App\\Providers\\PruebaServiceProvider::class,\r\n    ])->toArray(),\r\n    // ...\r\n];\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"observer",children:"Observer:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un observer:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":observer"," ModeloObserver --model=Modelo"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": me crea un observer en ",(0,l.jsx)(n.strong,{children:"app\\Observers\\ModeloObserver.php"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Programar un observer (modificar el observer ",(0,l.jsx)(n.strong,{children:"app\\Observers\\ModeloObserver.php"}),"):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\npublic function created(Modelo $modelo): void\r\n{\r\n    // Se activa al crear un registro\r\n}\r\n// ...\r\npublic function creating(Modelo $modelo): void\r\n{\r\n    // Se activa justo antes de crear un registro\r\n}\r\n// ...\r\npublic function updated(Modelo $modelo): void\r\n{\r\n    // Se activa al actualizar un registro\r\n}\r\n// ...\r\npublic function deleted(Modelo $modelo): void\r\n{\r\n    // Se activa al aleminar un registro\r\n}\r\n// ...\r\npublic function deleting(Modelo $modelo): void {\r\n    // Se activa justo antes de aliminar un registro\r\n}\r\n// ...\r\npublic function restored(Modelo $modelo): void\r\n{\r\n    //\r\n}\r\n// ...\r\npublic function forceDeleted(Modelo $modelo): void\r\n{\r\n    //\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Registrar un observer (modificar el provider ",(0,l.jsx)(n.strong,{children:"app\\Providers\\EventServiceProvider.php"}),"):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse App\\Models\\Modelo;\r\nuse App\\Observers\\ModeloObserver;\r\n\r\nclass EventServiceProvider extends ServiceProvider\r\n{\r\n    // ...\r\n    public function boot(): void\r\n    {\r\n        Modelo::observe(ModeloObserver::class);\r\n    }\r\n    // ...\r\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"pasar-par\xe1metros-a-determinadas-vistas",children:"Pasar par\xe1metros a determinadas vistas:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear archivo ",(0,l.jsx)(n.strong,{children:"app\\View\\Composers\\ViewComposer.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"<?php\r\n\r\nnamespace App\\View\\Composers;\r\nuse Illuminate\\View\\View;\r\n\r\nclass ViewComposer {\r\n    public function compose(View $view) {\r\n        $view->with('mi_parametro', 'Valor de mi_parametro');\r\n    }\r\n}    \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear providr ",(0,l.jsx)(n.strong,{children:"ViewServiceProvider"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":provider"," ViewServiceProvider"]}),"\n",(0,l.jsxs)(n.li,{children:["Programar provider ",(0,l.jsx)(n.strong,{children:"app\\Providers\\ViewServiceProvider.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Illuminate\\Support\\Facades\\View;\r\n\r\nclass AppServiceProvider extends ServiceProvider\r\n{\r\n    // ...\r\n    public function boot(): void\r\n    {\r\n        View::composer(['vista1', 'vista2'], ViewComposer::class);\r\n        // Si las vistas comienzan con un mismo nombre puedo escribir la instrucci\xf3n de la siguiente forma\r\n        // View::composer('vista*', ViewComposer::class);\r\n        /*\r\n            Ahora, desde las vistas vista1 y vista2 se podr\xe1 acceder a $mi_parametro\r\n        */\r\n    }\r\n}        \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Registrar provider en ",(0,l.jsx)(n.strong,{children:"config\\app.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nreturn [\r\n    // ...\r\n    'providers' => ServiceProvider::defaultProviders()->merge([\r\n        // ...\r\n        App\\Providers\\PruebaServiceProvider::class,\r\n    ])->toArray(),\r\n    // ...\r\n];\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"crear-una-vista-markdown",children:"Crear una vista markdown:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Instalar la dependencia:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ composer require graham-campbell/markdown"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear una vista para renderizar el archivo markdown ",(0,l.jsx)(n.strong,{children:"resources\\views\\markdown.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"{{-- Puedes incluir estilos CSS espec\xedficos para Markdown si lo deseas --}}\r\n<style>\r\n    /* Estilos CSS espec\xedficos para el contenido Markdown */\r\n</style>\r\n\r\n{{-- Mostrar el contenido HTML rendereado --}}\r\n{!! $htmlContent !!}    \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear una vista markdown ",(0,l.jsx)(n.strong,{children:"public\\markdown.md"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo del llamado de un archivo markdown en ",(0,l.jsx)(n.strong,{children:"routes\\web.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse GrahamCampbell\\Markdown\\Facades\\Markdown;\r\nuse Illuminate\\Support\\Facades\\File;\r\n// ...\r\nRoute::get('markdown', function () {\r\n    // Ruta al archivo Markdown\r\n    $filePath = public_path('markdown.md');\r\n\r\n    // Leer el contenido del archivo\r\n    $markdownContent = File::get($filePath);    \r\n\r\n    // Convertir Markdown a HTML usando la fachada Markdown\r\n    $htmlContent = Markdown::convertToHtml($markdownContent);\r\n\r\n    // Pasar el contenido HTML a la vista\r\n    return view('markdown')->with('htmlContent', $htmlContent);\r\n});    \n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"livewire",children:"Livewire:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un componente Livewire:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":livewire"," componente-livewire"]}),"\n",(0,l.jsx)(n.li,{children:"Vista del compoente: resources\\views\\livewire\\componente-livewire.blade.php"}),"\n",(0,l.jsx)(n.li,{children:"Controlador del componente: app\\Livewire\\ComponenteLivewire.php"}),"\n",(0,l.jsxs)(n.li,{children:["Para llamar al componennte desde una vista:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"@livewire('componente-livewire')\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Para indicar a un controlador de livewire que:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Use la paginaci\xf3n de Tailwind:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Livewire\\WithPagination;\r\n\r\nclass MiComponenteLiveWire extends Component {\r\n    use WithPagination;\r\n    // ...\r\n}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Use el tema de paginaci\xf3n de Bootstrap:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'// ...\r\nclass MiComponenteLiveWire extends Component {\r\n    // ...\r\n    protected $paginationTheme = "bootstrap";\r\n    // ...\r\n}\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Resetear la paginaci\xf3n cuando se modifique la variable de b\xfasqueda ($search):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass MiComponenteLiveWire extends Component {\r\n    // ...\r\n    public $search; // Variable de b\xfasqueda\r\n\r\n    public updatingSerach() {\r\n        $this->resetPage();\r\n    }\r\n    // ...\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Integrar ",(0,l.jsx)(n.strong,{children:"select2"})," en livewire:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"P\xe1gina de SELECT2"}),": ",(0,l.jsx)(n.a,{href:"https://select2.org",children:"https://select2.org"})]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"P\xe1gina de jQuery"}),": ",(0,l.jsx)(n.a,{href:"https://releases.jquery.com",children:"https://releases.jquery.com"})]}),"\n"]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Copiar los CDN de select2 y jQuery en la plantilla principal ",(0,l.jsx)(n.strong,{children:"resources\\views\\layouts\\app.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:'\x3c!-- ... --\x3e\r\n<head>\r\n    \x3c!-- ... --\x3e\r\n    \x3c!-- Styles --\x3e\r\n    \x3c!-- ... --\x3e\r\n    \x3c!-- Colocar en la parte de los css --\x3e\r\n    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />\r\n\r\n    \x3c!-- Scripts --\x3e\r\n    \x3c!-- ... --\x3e\r\n    \x3c!-- Colocar en la parte de los scripts --\x3e\r\n    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"><\/script>\r\n    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"><\/script>        \r\n</head>\n'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de uso:","\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un compoente livewire:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan make",":livewire"," select2"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Incluir el nuevo compoenente en la vista ",(0,l.jsx)(n.strong,{children:"resources\\views\\dashboard.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"\x3c!-- ... --\x3e\r\n@livewire('select2')\r\n\x3c!-- ... --\x3e\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Programar el controlador livewire ",(0,l.jsx)(n.strong,{children:"app\\Livewire\\Select2.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass Select2 extends Component\r\n{\r\n    public $opcion = 3;\r\n    // ...\r\n}            \n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Dise\xf1ar la vista livewire ",(0,l.jsx)(n.strong,{children:"resources\\views\\livewire\\select2.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:'<div class="m-5">\r\n    <p>{{ $opcion }}</p>\r\n    <div wire:ignore>\r\n        <select class="select2" wire:model="opcion">\r\n            <option value="1">Laravel</option>\r\n            <option value="2">Vue.js</option>\r\n            <option value="3">PHP</option>\r\n            <option value="4">Javascript</option>\r\n            <option value="5">MySQL</option>\r\n            <option value="6">Node.js</option>\r\n            <option value="7">React.js</option>\r\n        </select>\r\n    </div>\r\n\r\n    <script>\r\n        $(document).ready(function() {\r\n            $(\'.select2\').select2();\r\n            $(\'.select2\').on(\'change\', function() {\r\n                @this.set(\'opcion\', this.value);\r\n            });\r\n        });\r\n    <\/script>\r\n</div>\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"publicar-recursos-de-laravel",children:"Publicar recursos de Laravel:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Publicar idiomas:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan lang",":publish"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota:"})," para traducir los mensajes al espa\xf1ol, crear carpeta ",(0,l.jsx)(n.strong,{children:"es"})," y copiar traducidos al espa\xf1ol los archivos contenidos en ",(0,l.jsx)(n.strong,{children:"en"}),"."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"Publicar vistas de componentes Jetstream:\r\n+"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"tailwind",children:"Tailwind"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Documentaci\xf3n: ",(0,l.jsx)(n.a,{href:"https://tailwindcss.com/docs/installation",children:"https://tailwindcss.com/docs/installation"})]}),"\n",(0,l.jsxs)(n.li,{children:["Incluir CDN de tailwind en la plantilla principal ",(0,l.jsx)(n.strong,{children:"resources\\views\\layouts\\mi_plantilla.blade.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:'\x3c!-- ... --\x3e\r\n<head>\r\n    \x3c!-- ... --\x3e\r\n    <script src="https://cdn.tailwindcss.com"><\/script>\r\n</head>\r\n\x3c!-- ... --\x3e\n'})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"algunos-comandos-artisan",children:"Algunos comandos artisan:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Levantar un servidor web local:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ php artisan serve"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un enlace simb\xf3lico o acceso directo a el storage de la aplicaci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan storage",":link"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"cach\xe9-de-laravel",children:"Cach\xe9 de Laravel:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Archivo de configuraci\xf3n: config\\cache.php"}),"\n",(0,l.jsxs)(n.li,{children:["Aplicar cach\xe9 a un Controlador:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Illuminate\\Support\\Facades\\Cache;\r\n\r\nclass ModeloController extends Controller\r\n{\r\n    // ...\r\n    public function index() {\r\n        if(request()->page) {\r\n            $key = 'modelos' . request()->page;\r\n        } else {\r\n            $key = 'modelos';\r\n        }\r\n\r\n        if(Cache::has($key)) {\r\n            $modelos = Cache::get($key);\r\n        } else {\r\n            $modelos = Modelo::paginate();\r\n            // Almacenar en cache\r\n            // Par\xe1metro 1: nombre de la variable\r\n            // Par\xe1metro 2: valor de la variable\r\n            // Par\xe1metro 3 (opcional): tiempo que la variable existir\xe1 en cach\xe9\r\n            Cache::put($key, $modelos);\r\n        }\r\n\r\n        return view('crud.modelos.index', compact('modelos'));\r\n    }\r\n    // ...\r\n    public function store(Request $request) {\r\n        // ...\r\n        // Eliminar una variable (key) de cach\xe9\r\n        // Cache::forget('key');\r\n        // Eliminar todas las variables de cach\xe9\r\n        Cache::flush();\r\n        return redirect()->route('modelos.show', $modelo);\r\n    }\r\n    // ...\r\n    public function update(Request $request, Modelo $modelo) {\r\n        // ...\r\n        // Eliminar todas las variables de cach\xe9\r\n        Cache::flush();\r\n        return redirect()->route('modelos.show', $modelo);\r\n    }\r\n    // ...\r\n    public function destroy(Modelo $modelo) {\r\n        // ...\r\n        // Eliminar todas las variables de cach\xe9\r\n        Cache::flush();\r\n        return redirect()->route('modelos.index');\r\n    }        \r\n    // ...        \r\n}    \n"})}),"\n"]}),"\n",(0,l.jsx)(n.li,{children:"mmm"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"algunas-funciones-php",children:"Algunas funciones php:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// Encriptar contrase\xf1a:\r\n$password = bcrypt($request->password);\r\n// Transforma a t\xedtulo\r\n$minuscula = ucwords('pEdRo');      // regresa: Pedro\r\n// Transforma a m\xednusculas\r\n$minuscula = strtolower('pEdRo');    // regresa: pedro\n"})}),"\n",(0,l.jsx)(n.h2,{id:"crear-un-virtual-host",children:"Crear un virtual host:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Para el lado del cliente, modificar ",(0,l.jsx)(n.strong,{children:"C:\\Windows\\System32\\drivers\\etc\\hosts"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"# Host virtual Mi proyecto - lado del cliente\r\n127.0.0.1\tmiproyecto.test\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": Editar con el block de notas en modo de administrador."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Para el lado del servidor, modificar ",(0,l.jsx)(n.strong,{children:"C:\\xampp\\apache\\conf\\extra\\httpd-vhosts.conf"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'# Agregar esta l\xednea una \xfanica vez\r\n<VirtualHost *>\r\n    DocumentRoot "C:\\xampp\\htdocs"\r\n    ServerName localhost\r\n</VirtualHost>\r\n\r\n# Host virtual Mi proyecto - lado del servidor\r\n<VirtualHost *>\r\n    DocumentRoot "C:\\xampp\\htdocs\\miproyecto\\public"\r\n    ServerName miproyecto.test\r\n    <Directory "C:\\xampp\\htdocs\\miproyecto\\public">\r\n        Options All\r\n        AllowOverride All\r\n        Require all granted\r\n    </Directory>\r\n</VirtualHost>\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": En el archivo ",(0,l.jsx)(n.strong,{children:"C:\\xampp\\apache\\conf\\httpd.conf"})," las l\xedneas:"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"Include conf/extra/httpd-vhosts.conf\n"})}),"\n","y","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"LoadModule rewrite_module modules/mod_rewrite.so\n"})}),"\n","no deben estar comentada con #."]}),"\n",(0,l.jsx)(n.li,{children:"Reiniciar el servidor Apache."}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"laravel-collective",children:"Laravel Collective"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Documentaci\xf3n"}),": ",(0,l.jsx)(n.a,{href:"https://laravelcollective.com/docs",children:"https://laravelcollective.com/docs"})]}),"\n",(0,l.jsxs)(n.li,{children:["Para instalar dependencia:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ composer require laravelcollective/html"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo de uso:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejemplo 1:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"{!! Form::open(['route' => 'miruta']) !!}\r\n    {!! Form::label('name', 'Nommbre', ['class' => 'mis-clases']) !!}   \x3c!-- par\xe1metros: atributo for, atributo name --\x3e\r\n    {!! Form::text('name', $valor, ['class' => 'mis-clases', 'placeholder' => 'Ingrese un valor']) !!}   \x3c!-- par\xe1metros: atributo name, atributo value --\x3e        \r\n    {!! Form::submit('Aceptar', ['class' => 'mis-clases']) !!}   \x3c!-- par\xe1metros: atributo name --\x3e\r\n{!! Form::close() !!}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Ejemplo 2:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"{!! Form::model($modelo, ['route' => ['miruta', $paremetro], 'method' => 'put']) !!}\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo name\r\n        par\xe1metro 2: atributo value \r\n        par\xe1metro 3: atributos adicionales\r\n    --\x3e\r\n    {!! Form::hidden('name_hidden', $valor) !!}\r\n\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo for\r\n        par\xe1metro 2: atributo name \r\n        par\xe1metro 3: atributos adicionales\r\n    --\x3e\r\n    {!! Form::label('name_text', 'Nommbre', ['class' => 'mis-clases']) !!}\r\n\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo name\r\n        par\xe1metro 2: atributo value \r\n        par\xe1metro 3: atributos adicionales\r\n    --\x3e\r\n    {!! Form::text('name_text', $valor, ['class' => 'mis-clases', 'placeholder' => 'Ingrese un valor']) !!}\r\n\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo name\r\n        par\xe1metro 2: array de opciones con la estructura atributo - valor \r\n        par\xe1metro 3: opci\xf3n por defecto\r\n        par\xe1metro 4: atributos adicionales \r\n    --\x3e\r\n    {!! Form::select('name_select', $opciones, null, ['class' => 'mis-clases']) !!}\r\n\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo name, si queremos varios check enviar el name con corchetes []\r\n        par\xe1metro 2: valor del o de los checkbox, si es uno, solamente un id, si son varios entonces un array\r\n        par\xe1metro 3: valor del o de los checkbox por defecto\r\n        par\xe1metro 4: atributos adicionales \r\n    --\x3e\r\n    {!! Form::checkbox('name_check', $valor_id, null, ['class' => 'mis-clases']) !!}\r\n    {{ $valor->name }}\r\n    \x3c!-- cuando son varios checbox se debe de usar la directiva blade @foreach --\x3e\r\n    @foreach($valores as $valor)\r\n        {!! Form::checkbox('name_check[]', $valor->id, null, ['class' => 'mis-clases']) !!}\r\n        {{ $valor->name }}\r\n    @endforeach\r\n\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo name\r\n        par\xe1metro 2: valor del o de los radios, si es uno, solamente un id, si son varios entonces un array\r\n        par\xe1metro 3: true o false, para activarlos\r\n        par\xe1metro 4: atributos adicionales \r\n    --\x3e\r\n    {!! Form::radio('name_radio', $valor_id, null, ['class' => 'mis-clases']) !!}\r\n    {{ $valor->name }}\r\n    \x3c!-- cuando son varios checbox se debe de usar la directiva blade @foreach --\x3e\r\n    @foreach($valores as $valor)\r\n        {!! Form::radio('name_radio', $valor->id, null, ['class' => 'mis-clases']) !!}\r\n        {{ $valor->name }}\r\n    @endforeach\r\n\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo name\r\n        par\xe1metro 2: atributo value \r\n        par\xe1metro 3: atributos adicionales\r\n    --\x3e\r\n    {{!! Form::textarea('name_textarea', $valor, ['class' => 'mis-clases']) !!}}\r\n\r\n    \x3c!-- \r\n        par\xe1metro 1: atributo name\r\n        par\xe1metro 2: atributos adicionales \r\n    --\x3e\r\n    {!! Form::submit('Aceptar', ['class' => 'mis-clases']) !!} \r\n{!! Form::close() !!}\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Para indicar el env\xedo de archivos dentro del formulario","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"{!! Form::open(['route' => 'miruta', 'files' => true]) !!}\r\n    {!! Form::file('file', ['class' => 'mis-clases']) !!}\r\n    // ...\r\n{!! Form::close() !!}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"laravel-permission",children:"Laravel-permission:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Documentaci\xf3n: ",(0,l.jsx)(n.a,{href:"https://spatie.be/index.php/docs/laravel-permission/v6/introduction",children:"https://spatie.be/index.php/docs/laravel-permission/v6/introduction"})]}),"\n",(0,l.jsxs)(n.li,{children:["Instalaci\xf3n:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"$ composer require spatie/laravel-permission"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Publicar las migraciones:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["$ php artisan vendor",":publish",' --provider="Spatie\\Permission\\PermissionServiceProvider"']}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Indicar los modelos que har\xe1n uso de Laravel permission:","\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Ejemplo: modificar el modelo User ",(0,l.jsx)(n.strong,{children:"app\\Models\\User.php"}),":","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Spatie\\Permission\\Traits\\HasRoles;\r\n// ...\r\nclass User extends Authenticatable\r\n{\r\n    use HasRoles;   // Establece las relaciones entre el modelo User y los modelos de Laravel Permission\r\n    // ...\r\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crar roles y permisos:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nuse Spatie\\Permission\\Models\\Role;\r\nuse Spatie\\Permission\\Models\\Permission;\r\n// ...\r\n$rol1 = Role::create(['name' => 'rol1']);\r\n// ...\r\n$permiso1 = Permission::create(['name' => 'permiso1']);\r\n// ...\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Nota"}),": un buen lugar para crearlos es en un Seeder."]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Asignar un rol con un permiso:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\n$permiso1 = Permission::create(['name' => 'permiso1'])->assignRole($rol1);\r\n$permiso2 = Permission::create(['name' => 'permiso2'])->assignRole([$rol1, $rol2]);\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Asignar varios roles con un permiso:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\n$permiso1 = Permission::create(['name' => 'permiso1'])->syncRole([$rol1, $rol2]);\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Asignar a un ros varios permisos:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\n$rol1->permissions()->sync($listaDePermisos);\r\n// ...\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Proteger vista blade:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-html",children:"@can('permiso1')\r\n    \x3c!-- ... --\x3e\r\n@endcan\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Proteger rutas desde un archivo de rutas (proteger ruta):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"Route::get('prueba', function() {\r\n    return \"Tienes permiso para ingresar a esta ruta\";\r\n})->middleware('can:premiso1');\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Proteger rutas desde un controlador (proteger m\xe9todo):","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"// ...\r\nclass ModeloController extends Controller {\r\n    public function __construct() {\r\n        $this->middleware('can:permiso1')->only('metodo1', 'metodo2');\r\n    }\r\n    // ...\r\n}\r\n\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"tips-generales",children:"Tips generales:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Crear un arreglo a partir de un campo de una colecci\xf3n:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"$coleccion = Modelo::pluck('campo1');\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Esto regresa un objeto con una estructura similar a esta:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'[\r\n    "valor 1",\r\n    "valor 2",\r\n    "valor 3",\r\n    // ...\r\n]\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["Crear un objeto llave valor a partir de una colecci\xf3n:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-php",children:"$coleccion = Modelo::pluck('valor', 'llave');   \r\n// Ejemplo: valor puede ser nombre y llave puede ser el id de la colecci\xf3n\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Esto regresa un objeto con una estructura similar a esta:","\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\r\n    "1": "valor 1",\r\n    "2": "valor 2",\r\n    "3": "valor 3",\r\n    // ...\r\n}\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(t,{...e})}):t(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var l=r(6540);const s={},a=l.createContext(s);function o(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);